require 'csv'
CSV.open('pay_seniority_report.csv', 'a') do |row|
  row << ['name','spire','total hours worked Spring 2020','current pay seniority','date/time of last pay seniority update','user who last updated pay seniority']
  period = Period.find_by_name('Spring2020')
  date_range = period.start_date..period.end_date
  users = User.active.joins(employee_assignments: :daily_assignment)
    .where(daily_assignments: { date: date_range }).uniq
  # TODO: don't include trainees or trainee hours
  users.each do |user|
    name = user.proper_name
    spire = user.spire_id
    hours_worked = user.employee_assignments.active.joins(:daily_assignment)
      .where(daily_assignments: { date: date_range }).sum(&:length_transit_double)
    current_pay_seniority = user.pay_seniority.seniority
    last_update = user.pay_seniority.versions.last.created_at.strftime('%m/%d/%Y %H:%M:%S')
    who_updated = User.find(user.pay_seniority.versions.last.whodunnit).full_name rescue 'Unknown (IT probably)'
    row << [name, spire, hours_worked, current_pay_seniority, last_update, who_updated]
  end
end
